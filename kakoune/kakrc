source "%val{config}/plugins/plug.kak/rc/plug.kak"
plug "eraserhd/parinfer-rust" do %{
    cargo build --release
    cargo install --force --path .
}
plug 'Delapouite/kakoune-buffers'
plug "andreyorst/fzf.kak" defer "fzf" %{
    set-option global fzf_file_command 'rg --files --hidden --follow --glob "!.git/*"'
}
plug "ul/kak-lsp" do %{
    cargo build --release --locked
    cargo install --force --path .
} config %{
    hook global WinSetOption filetype=(python|rust|haskell|go|javascript|scala) %{
        set-option window lsp_auto_highlight_references true
        set-option window lsp_hover_anchor false
        lsp-enable-window
    }

    hook global WinSetOption filetype=(rust) %{
        set-option window lsp_server_configuration rust.clippy_preference="on"
    }

    hook global WinSetOption filetype=rust %{
        hook window BufWritePre .* %{
            evaluate-commands %sh{
                test -f rustfmt.toml && printf lsp-formatting-sync
            }
        }
    }

    hook global KakEnd .* lsp-exit
}

set-option global grepcmd 'rg+'
set-option global ui_options ncurses_status_on_top=false

colorscheme zenburn

define-command ide %{
    rename-client main
    set-option global jumpclient main

    new rename-client tools
    set-option global toolsclient tools
}

hook global WinDisplay .* info-buffers
map global user b ':enter-buffers-mode<ret>'              -docstring 'buffers…'
map global user B ':enter-user-mode -lock buffers<ret>'   -docstring 'buffers (lock)…'
map global user f ':fzf-mode<ret>'                        -docstring 'fzf mode'
map global user m ':enter-user-mode lsp<ret>'             -docstring 'lsp mode'
